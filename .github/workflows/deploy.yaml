# name: Deploy on EC2

# on:
#   push:
#     branches: ["main"]
#   pull_request:
#     branches: ["main"]

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
#       - uses: actions/checkout@v3

#       - name: Use Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: "18.18"

#       - name: Install Dependencies
#         run: npm install --frozen-lockfile

#       - name: Build Project
#         run: npm run build

#   deploy:
#     runs-on: ubuntu-latest
#     needs: build

#     steps:
#       - uses: actions/checkout@v3

#       - name: Use Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: "18.18"

#       - name: Install Dependencies
#         run: npm install --frozen-lockfile

#       - name: Build Project
#         run: npm run build

#       # Configure SSH
#       - name: Configure SSH
#         env:
#           SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
#         run: |
#           mkdir -p ~/.ssh
#           echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
#           chmod 600 ~/.ssh/id_rsa
#           ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

#       # Deploy to EC2
#       - name: Deploy to EC2
#         env:
#           EC2_HOST: ${{ secrets.EC2_HOST }}
#           EC2_USER: ${{ secrets.EC2_USER }}
#         run: |
#           # Create deployment directory
#           ssh $EC2_USER@$EC2_HOST "mkdir -p ~/app"

#           # Copy files to EC2 instance
#           rsync -avz \
#             --exclude='.git' \
#             --exclude='node_modules' \
#             --exclude='.github' \
#             . $EC2_USER@$EC2_HOST:~/app/

#           # Install production dependencies on EC2
#           ssh $EC2_USER@$EC2_HOST "cd ~/app && export PATH=$PATH:/home/ubuntu/.local/share/fnm/bin && npm install --frozen-lockfile"

#           # Stop existing PM2 process if it exists
#           ssh $EC2_USER@$EC2_HOST "export PATH=$PATH:/home/ubuntu/.local/share/fnm/bin && pm2 delete Bistro_delight_aws || true"

#           # Start the application with PM2
#           ssh $EC2_USER@$EC2_HOST "export PATH=$PATH:/home/ubuntu/.local/share/fnm/bin && cd ~/app && pm2 start dist/index.html --name Bistro_delight_aws"

name: Deploy on EC2

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18.18"

      - name: Install Dependencies
        run: npm install --frozen-lockfile

      - name: Build Project
        run: npm run build

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18.18"

      - name: Install Dependencies
        run: npm install --frozen-lockfile

      - name: Build Project
        run: npm run build

      # Configure SSH
      - name: Configure SSH
        env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      # Deploy to EC2
      - name: Deploy to EC2
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
        run: |
          # Set execute permissions on the necessary directories
          ssh $EC2_USER@$EC2_HOST "sudo chmod +x /home/ubuntu && sudo chmod +x /home/ubuntu/app"

          # Create deployment directory and set correct permissions
          ssh $EC2_USER@$EC2_HOST "mkdir -p ~/app/dist && sudo chmod -R 775 ~/app/dist"

          # Copy files to EC2 instance
          rsync -avz --no-times --exclude='.git' --exclude='node_modules' --exclude='.github' . $EC2_USER@$EC2_HOST:~/app/

          # Ensure correct ownership
          ssh $EC2_USER@$EC2_HOST "sudo chown -R $EC2_USER:$EC2_USER ~/app"

          # Install production dependencies on EC2
          ssh $EC2_USER@$EC2_HOST "cd ~/app && export PATH=$PATH:/home/ubuntu/.local/share/fnm/bin && npm install --frozen-lockfile"

          # Stop existing PM2 process if it exists
          ssh $EC2_USER@$EC2_HOST "export PATH=$PATH:/home/ubuntu/.local/share/fnm/bin && pm2 delete Bistro_delight_aws || true"

          # Start the application with PM2
          ssh $EC2_USER@$EC2_HOST "export PATH=$PATH:/home/ubuntu/.local/share/fnm/bin && cd ~/app && pm2 start dist/index.html --name Bistro_delight_aws"
